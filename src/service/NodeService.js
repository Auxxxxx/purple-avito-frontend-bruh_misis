// import axios from "axios";
export const NodeService = {

    getTreeNodesDataLocation(){
      return [
        { 
          "key": 0,
          "label": "–í—Å–µ –ª–æ–∫–∞—Ü–∏–∏",
          "children": [
          {
            "key": 1,
            "label": "–ê–¥—ã–≥–µ—è",
            "children": [
              { "key": 2, "label": "–¢–∞—Ö—Ç–∞–º—É–∫–∞–π" },
              { "key": 3, "label": "–¢–ª—é—Å—Ç–µ–Ω—Ö–∞–±–ª—å" },
              { "key": 4, "label": "–•–∞–∫—É—Ä–∏–Ω–æ—Ö–∞–±–ª—å" },
              { "key": 5, "label": "–•–∞—Ç—É–∫–∞–π" },
              { "key": 6, "label": "–•–æ–¥–∑—å" },
              { "key": 7, "label": "–≠–Ω–µ–º" },
              { "key": 8, "label": "–Ø–±–ª–æ–Ω–æ–≤—Å–∫–∏–π" },
              { "key": 9, "label": "–•–∞–Ω—Å–∫–∞—è" },
              { "key": 10, "label": "–¢—É–ª—å—Å–∫–∏–π" },
              { "key": 11, "label": "–ê–±–∞–¥–∑–µ—Ö—Å–∫–∞—è" },
              { "key": 12, "label": "–ê–¥—ã–≥–µ–π—Å–∫" },
              { "key": 13, "label": "–ë–µ–ª–æ–µ" },
              { "key": 14, "label": "–ë–ª–µ—á–µ–ø—Å–∏–Ω" },
              { "key": 15, "label": "–í–æ–ª—å–Ω–æ–µ" },
              { "key": 16, "label": "–ì–∏–∞–≥–∏–Ω—Å–∫–∞—è" },
              { "key": 17, "label": "–î–æ–Ω–¥—É–∫–æ–≤—Å–∫–∞—è" },
              { "key": 18, "label": "–ö–∞–º–µ–Ω–Ω–æ–º–æ—Å—Ç—Å–∫–∏–π" },
              { "key": 19, "label": "–ö–æ—à–µ—Ö–∞–±–ª—å" },
              { "key": 20, "label": "–ö—Ä–∞—Å–Ω–æ–≥–≤–∞—Ä–¥–µ–π—Å–∫–æ–µ" },
              { "key": 21, "label": "–ö—Ä–∞—Å–Ω–æ–æ–∫—Ç—è–±—Ä—å—Å–∫–∏–π" },
              { "key": 22, "label": "–ö—É–∂–æ—Ä—Å–∫–∞—è" },
              { "key": 23, "label": "–ú–∞–π–∫–æ–ø" },
              { "key": 24, "label": "–ù–∞—Ç—ã—Ä–±–æ–≤–æ" },
              { "key": 25, "label": "–ü–æ–Ω–µ–∂—É–∫–∞–π" },
              { "key": 26, "label": "–°–µ–≤–µ—Ä–æ-–í–æ—Å—Ç–æ—á–Ω—ã–µ –°–∞–¥—ã" }
            ]
          },
          {
            "key": 27,
            "label": "–ê–ª—Ç–∞–π—Å–∫–∏–π –∫—Ä–∞–π",
            "children": [
              { "key": 28, "label": "–ö—Ä—É—Ç–∏—Ö–∞" },
              { "key": 29, "label": "–ö—É—Ä—å—è" },
              { "key": 30, "label": "–ö—ã—Ç–º–∞–Ω–æ–≤–æ" },
              { "key": 31, "label": "–õ–µ–±—è–∂—å–µ" },
              { "key": 32, "label": "–õ–µ–Ω—å–∫–∏" },
              { "key": 33, "label": "–ú–∞–ª–∏–Ω–æ–≤–æ–µ –û–∑–µ—Ä–æ" },
              { "key": 34, "label": "–ú–∞–º–æ–Ω—Ç–æ–≤–æ" },
              { "key": 35, "label": "–ø—Ä–∏ —Å—Ç. –û–∑–µ—Ä–∫–∏" },
              { "key": 36, "label": "–¢—Ä–æ–∏—Ü–∫–æ–µ" },
              { "key": 37, "label": "–ó–∞—Ç–æ–Ω" },
              { "key": 38, "label": "–ù–∞–≥–æ—Ä–Ω—ã–π" },
              { "key": 39, "label": "–ù–æ–≤–æ—Å–∏–ª–∏–∫–∞—Ç–Ω—ã–π" },
              { "key": 40, "label": "–°–æ—Ä–æ–∫–∏–Ω–æ" },
              { "key": 41, "label": "–ö–∞–ª–º–∞–Ω–∫–∞" },
              { "key": 42, "label": "–°–ª–∞–≤–≥–æ—Ä–æ–¥—Å–∫–æ–µ" },
              { "key": 43, "label": "–ü–∞–≤–ª–æ–≤—Å–∫" },
              { "key": 44, "label": "–û–∑–µ—Ä–∫–∏" },
              { "key": 45, "label": "–ù–æ–≤—ã–µ –ó–æ—Ä–∏" },
              { "key": 46, "label": "–ë–∞–µ–≤–æ" },
              { "key": 47, "label": "–í–µ—Å–µ–ª–æ—è—Ä—Å–∫" },
              { "key": 48, "label": "–ü–µ—Ä–≤–æ–º–∞–π—Å–∫–æ–µ" },
              { "key": 49, "label": "–Ø—Ä–æ–≤–æ–µ" },
            ]
          },
        ]
        }
      ];
    },

    getTreeNodesDataCategory(){
      return [
          {
            "key": 1,
            "label": "–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
            "children": [
              {
                "key": 2,
                "label": "–ë—ã—Ç–æ–≤–∞—è —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞",
                "children": [
                  { "key": 3, "label": "–¢–æ–≤–∞—Ä—ã –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞" },
                  { "key": 4, "label": "–§–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞" },
                  { "key": 5, "label": "–¢–µ–ª–µ—Ñ–æ–Ω—ã" },
                  { "key": 6, "label": "–ü–ª–∞–Ω—à–µ—Ç—ã –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏" },
                  { "key": 7, "label": "–û—Ä–≥—Ç–µ—Ö–Ω–∏–∫–∞ –∏ —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∏" },
                  { "key": 8, "label": "–ù–æ—É—Ç–±—É–∫–∏" },
                  { "key": 9, "label": "–ù–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∫–æ–º–ø—å—é—Ç–µ—Ä—ã" },
                  { "key": 10, "label": "–ò–≥—Ä—ã, –ø—Ä–∏—Å—Ç–∞–≤–∫–∏ –∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã" },
                  { "key": 11, "label": "–ê—É–¥–∏–æ –∏ –≤–∏–¥–µ–æ" }
                ]
              },
              {
                "key": 12,
                "label": "–ì–æ—Ç–æ–≤—ã–π –±–∏–∑–Ω–µ—Å –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ",
                "children": [
                  { "key": 13, "label": "–ì–æ—Ç–æ–≤—ã–π –±–∏–∑–Ω–µ—Å" },
                  { "key": 14, "label": "–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞" }
                ]
              },
              {
                "key": 15,
                "label": "–î–ª—è –¥–æ–º–∞ –∏ –¥–∞—á–∏",
                "children": [
                  { "key": 16, "label": "–ú–µ–±–µ–ª—å –∏ –∏–Ω—Ç–µ—Ä—å–µ—Ä" },
                  { "key": 17, "label": "–†–µ–º–æ–Ω—Ç –∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ" },
                  { "key": 18, "label": "–ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è" },
                  { "key": 19, "label": "–†–∞—Å—Ç–µ–Ω–∏—è" },
                  { "key": 20, "label": "–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞" },
                  { "key": 21, "label": "–ü–æ—Å—É–¥–∞ –∏ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –∫—É—Ö–Ω–∏" }
                ]
              },
              {
                "key": 22,
                "label": "–ñ–∏–≤–æ—Ç–Ω—ã–µ",
                "children": [
                  { "key": 23, "label": "–î—Ä—É–≥–∏–µ –∂–∏–≤–æ—Ç–Ω—ã–µ" },
                  { "key": 24, "label": "–¢–æ–≤–∞—Ä—ã –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö" },
                  { "key": 25, "label": "–ü—Ç–∏—Ü—ã" },
                  { "key": 26, "label": "–ê–∫–≤–∞—Ä–∏—É–º" },
                  { "key": 27, "label": "–ö–æ—à–∫–∏" },
                  { "key": 28, "label": "–°–æ–±–∞–∫–∏" }
                ]
              },
              {
                "key": 29,
                "label": "–õ–∏—á–Ω—ã–µ –≤–µ—â–∏",
                "children": [
                  { "key": 30, "label": "–î–µ—Ç—Å–∫–∞—è –æ–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å" },
                  { "key": 31, "label": "–û–¥–µ–∂–¥–∞, –æ–±—É–≤—å, –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã" },
                  { "key": 32, "label": "–¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–µ—Ç–µ–π –∏ –∏–≥—Ä—É—à–∫–∏" },
                  { "key": 33, "label": "–ß–∞—Å—ã –∏ —É–∫—Ä–∞—à–µ–Ω–∏—è" },
                  { "key": 34, "label": "–ö—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ" }
                ]
              },
              {
                "key": 35,
                "label": "–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å",
                "children": [
                  { "key": 36, "label": "–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –∑–∞ —Ä—É–±–µ–∂–æ–º" },
                  { "key": 37, "label": "–ö–≤–∞—Ä—Ç–∏—Ä—ã" },
                  { "key": 38, "label": "–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å" },
                  { "key": 39, "label": "–ì–∞—Ä–∞–∂–∏ –∏ –º–∞—à–∏–Ω–æ–º–µ—Å—Ç–∞" },
                  { "key": 40, "label": "–ó–µ–º–µ–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏" },
                  { "key": 41, "label": "–î–æ–º–∞, –¥–∞—á–∏, –∫–æ—Ç—Ç–µ–¥–∂–∏" },
                  { "key": 42, "label": "–ö–æ–º–Ω–∞—Ç—ã" }
                ]
              },
              {
                "key": 43,
                "label": "–†–∞–±–æ—Ç–∞",
                "children": [
                  { "key": 44, "label": "–†–µ–∑—é–º–µ" },
                  { "key": 45, "label": "–í–∞–∫–∞–Ω—Å–∏–∏" }
                ]
              },
              {
                "key": 46,
                "label": "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
                "children": [
                  { "key": 47, "label": "–ê–≤—Ç–æ–º–æ–±–∏–ª–∏" },
                  { "key": 48, "label": "–ó–∞–ø—á–∞—Å—Ç–∏ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã" },
                  { "key": 49, "label": "–ì—Ä—É–∑–æ–≤–∏–∫–∏ –∏ —Å–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–∞" },
                  { "key": 50, "label": "–í–æ–¥–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç" },
                  { "key": 51, "label": "–ú–æ—Ç–æ—Ü–∏–∫–ª—ã –∏ –º–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞" }
                ]
              },
              {
                "key": 52,
                "label": "–£—Å–ª—É–≥–∏",
                "children": [
                  { "key": 53, "label": "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —É—Å–ª—É–≥" }
                ]
              },
              {
                "key": 54,
                "label": "–•–æ–±–±–∏ –∏ –æ—Ç–¥—ã—Ö",
                "children": [
                  { "key": 55, "label": "–û—Ö–æ—Ç–∞ –∏ —Ä—ã–±–∞–ª–∫–∞" },
                  { "key": 56, "label": "–°–ø–æ—Ä—Ç –∏ –æ—Ç–¥—ã—Ö" },
                  { "key": 57, "label": "–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ" },
                  { "key": 58, "label": "–ö–Ω–∏–≥–∏ –∏ –∂—É—Ä–Ω–∞–ª—ã" },
                  { "key": 59, "label": "–í–µ–ª–æ—Å–∏–ø–µ–¥—ã" },
                  { "key": 60, "label": "–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã" },
                  { "key": 61, "label": "–ë–∏–ª–µ—Ç—ã –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è" }
                ]
              }
            ]
          } 
      ];
    },


  // TODO: –î–û–õ–ñ–ù–´ –ë–´–õ–ò –ë–†–ê–¢–¨ –î–ê–ù–ù–´–ï –ò–ó –°–ï–†–í–ï–†–ê, –ù–û –ß–¢–û-–¢–û –ü–û–®–õ–û –ù–ï –¢–ê–ö... –ù–ï –†–£–ì–ê–ô–¢–ï–°–¨ –°–ò–õ–¨–ù–û, –ü–û–ñ–ê–õ–£–ô–°–¢–êü•∫
  // async getTreeNodesDataLocation() {
  //     try {
  //         const response = await fetch('http://localhost/location'); 
  //         if(!response.ok){
  //           throw new Error('–û—à–∏–±–∫–∞ HTTP:' + response.status);
  //         }
  //         const data = await response.json();
  //         console.log(data)
  //         return [data];
  //     } catch (error) {
  //         console.error('Error fetching tree nodes:', error);
  //         return [];
  //     }
  // },

  // async getTreeNodesDataCategory() {
  //   try {
  //       const response = await axios.get('http://localhost/category/');
  //       if(!response.status){
  //         throw new Error('–û—à–∏–±–∫–∞ HTTP:' + response.status);
  //       }
  //       const data = await response.data;
  //       const stringifiedData = data.prototype.map(obj => stringifyKeys(obj));
  //       console.log(stringifiedData);
  //       console.log(data);
  //       console.log(typeof data);
  //       return [data];
  //   } catch (error) {
  //       console.error('Error fetching tree nodes:', error);
  //       return [];
  //   }
  // },

  // async getNodeChildren(id) {
  //   try {
  //       const response = await fetch(`http://localhost/category/${id}`); 
  //       if(!response.ok){
  //         throw new Error('–û—à–∏–±–∫–∞ HTTP:' + response.status);
  //       }
  //       const data = await response.data;
  //       console.log(data);
  //       return [data];
  //   } catch (error) {
  //       console.error('Error fetching tree nodes:', error);
  //       return [];
  //   }
  // },

  getTreeNodesCategory() {
    return Promise.resolve(this.getTreeNodesDataCategory());
  },

  getTreeNodesLocation() {
    return Promise.resolve(this.getTreeNodesDataLocation());
  },
};